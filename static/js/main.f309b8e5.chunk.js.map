{"version":3,"sources":["themes/theme.ts","i18n.ts","translations/en.ts","translations/kr.ts","translations/cn.ts","components/SnackBar/SnackBar.tsx","containers/LanguageMenu/index.tsx","containers/LanguageMenu/LanguageMenu.tsx","containers/MyApp.tsx","PostMessageServer/postMessageServer.ts","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","momentMap","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","kr","cn","interpolation","escapeValue","format","value","lng","ln","moment","locale","NotificationType","reverseSupportedLanguages","supportedLanguages","LanguageMenu","useTranslation","t","React","anchorEl","setAnchorEl","title","Tooltip","Button","onClick","event","currentTarget","language","Menu","id","keepMounted","open","Boolean","onClose","Object","values","map","lang","i","MenuItem","changeLanguage","handleMenuItemClick","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarContentWrapper","withStyles","theme","green","backgroundColor","dark","primary","secondary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","close","padding","margin","classes","className","variant","other","Icon","SnackbarContent","classNames","aria-describedby","action","IconButton","aria-label","SnackBar","marginLeft","notification","isEmpty","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","eserialize","hexToDate","hexToNumber","hexToString","dateToHex","stringToHex","numberToHex","MyApp","hideToggleDarkMode","darkMode","useDarkMode","useState","isEditorReady","setIsEditorReady","inputOptions","setInputOptions","outputOptions","setOutputOptions","useQueryParam","StringParam","selectedInputOption","setSelectedInputOption","selectedOutputOption","setSelectedOutputOption","setValue","inputAnchorEl","setInputAnchorEl","outputAnchorEl","setOutputAnchorEl","setError","results","setResults","setNotification","valueGetter","useRef","editorRef","useEffect","undefined","current","includes","Error","monaco","setTheme","inputTitle","outputTitle","toggleDarkModeTitle","AppBar","Toolbar","Grid","container","alignContent","justify","xs","Typography","style","paddingRight","editorValue","funcKey","toLowerCase","toUpperCase","slice","e","item","parseInt","Date","coerce","toString","console","disabled","inputOption","outputOption","toggle","CssBaseline","split","minSize","maxSize","defaultSize","flexGrow","height","editorOptions","useShadows","minimap","enabled","scrollBeyondLastLine","lineNumbers","automaticLayout","onChange","ev","v","editorDidMount","vg","editor","top","right","zIndex","window","addEventListener","a","evSource","source","data","jsonrpc","method","postMessage","result","openrpcDocument","origin","otherEserialize","code","params","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f309b8e5.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport enJSON from \"./translations/en\";\nimport krJSON from \"./translations/kr\";\nimport cnJSON from \"./translations/cn\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-ca\";\nimport i18next from \"i18next\";\n\ninterface IMap {\n  [key: string]: string;\n}\n\nconst momentMap: IMap = {\n  \"kr\": \"ko\",\n  \"cn\": \"zh-cn\",\n  \"en-US\": \"en-ca\",\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enJSON },\n      kr: { translation: krJSON },\n      cn: { translation: cnJSON },\n    },\n    interpolation: {\n      escapeValue: false,\n      format: (value, format, lng) => {\n        if (!lng) {\n          return \"\";\n        }\n        const ln = momentMap[lng];\n        switch (format) {\n          case \"date\":\n            return moment(value).locale(ln || \"en\").format(\"MMMM Do YYYY, h:mm:ss a\");\n          default:\n            break;\n        }\n        return \"\";\n      },\n    },\n  });\n\nexport const reverseSupportedLanguages: IMap = {\n  \"EN\": \"en-US\", //tslint:disable-line\n  \"中文\": \"cn\", //tslint:disable-line\n  \"한국어\": \"kr\", //tslint:disable-line\n};\n\nexport const supportedLanguages: IMap = {\n  \"en-US\": \"EN\",\n  \"cn\": \"中文\",\n  \"kr\": \"한국어\",\n};\n\nexport const changeLanguage = (l: string) => {\n  return i18next.changeLanguage(l);\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"Change Language\",\n  \"Toggle Dark Mode\": \"Toggle Dark Mode\",\n  \"Configuration\": \"Configuration\",\n  \"Back\": \"Back\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"언어 변경\",\n  \"Toggle Dark Mode\": \"블랙모드 변경\",\n  \"Configuration\": \"구성\",\n  \"Back\": \"뒤로\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"更改语言\",\n  \"Toggle Dark Mode\": \"切换黑暗模式\",\n  \"Configuration\": \"配置\",\n  \"Back\": \"返回\",\n};\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { isEmpty } from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  close: {\n    padding: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n});\n\nexport enum NotificationType {\n  Error = \"error\",\n  Warn = \"warning\",\n  Info = \"info\",\n  Success = \"success\",\n  Debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  notification?: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n  onClose: any;\n  variant: NotificationType;\n  className: string;\n  message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nconst SnackBarCntWrapper: React.FC<ISnackBarContentProps> = (props) => {\n  const { classes, className, message, onClose, variant, ...other } = props;\n\n  const Icon = variantIcon[variant];\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n};\n\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nconst SnackBarWrapper: React.FC<IProps> = (props) => {\n  const { classes, notification, close } = props;\n  if (isEmpty(notification)) { return null; }\n  if (!notification) { return null; }\n  return (\n    <Snackbar\n      open\n      autoHideDuration={3000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}>\n      <SnackBarContentWrapper\n        onClose={close}\n        variant={notification.type}\n        message={<span>{notification.message}</span>}\n        className={classes.margin}\n      />\n    </Snackbar>\n  );\n};\n\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import LanguageMenu from \"./LanguageMenu\";\nexport default LanguageMenu;\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { supportedLanguages, reverseSupportedLanguages } from \"../../i18n\";\n\nconst LanguageMenu: React.FC = (props) => {\n  const { t, i18n } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (lang: string) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    i18n.changeLanguage(reverseSupportedLanguages[lang]);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const title: string = t(\"Change Language\");\n\n  return (\n    <>\n      <Tooltip title={title}>\n        <Button onClick={handleClick}>{supportedLanguages[i18n.language]}</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.values(supportedLanguages).map((lang, i) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(lang)}>{lang}</MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageMenu;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { MuiThemeProvider, AppBar, Toolbar, Typography, IconButton, Tooltip, CssBaseline, Grid, Button, MenuItem, Menu } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport CompareArrows from \"@material-ui/icons/CompareArrows\";\nimport { lightTheme, darkTheme } from \"../themes/theme\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageMenu from \"./LanguageMenu\";\nimport SplitPane from \"react-split-pane\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport { hexToDate, hexToNumber, hexToString, stringToHex, dateToHex, numberToHex } from \"@etclabscore/eserialize\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"../components/SnackBar/SnackBar\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport * as monaco from \"monaco-editor\";\n\nimport { useQueryParam, StringParam } from \"use-query-params\";\n\nconst eserialize = {\n  hexToDate,\n  hexToNumber,\n  hexToString,\n  dateToHex,\n  stringToHex,\n  numberToHex,\n};\n\ninterface IProps {\n  hideToggleDarkMode?: boolean;\n}\n\nconst MyApp: React.FC<IProps> = (props) => {\n  const hideToggleDarkMode = props.hideToggleDarkMode;\n  const darkMode = useDarkMode();\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [inputOptions, setInputOptions] = useState([\n    \"string\",\n    \"number\",\n    \"date\",\n  ]);\n  const [outputOptions, setOutputOptions] = useState([\n    \"hex\",\n  ]);\n\n  const [selectedInputOption, setSelectedInputOption] = useQueryParam(\"input\", StringParam);\n  const [selectedOutputOption, setSelectedOutputOption] = useQueryParam(\"output\", StringParam);\n  const [value, setValue] = useQueryParam(\"value\", StringParam);\n  const [inputAnchorEl, setInputAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [outputAnchorEl, setOutputAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [error, setError] = React.useState<string | undefined>();\n  const [results, setResults] = useState();\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n  const valueGetter = useRef();\n  const editorRef = useRef();\n\n  function handleEditorDidMount(vg: any, editor: any) {\n    valueGetter.current = vg;\n    editorRef.current = editor;\n    setIsEditorReady(true);\n  }\n\n  function handleEditorChange(ev: any, v: string | undefined): string | undefined {\n    setValue(v);\n    return v;\n  }\n\n  useEffect(() => {\n    if (isEditorReady && editorRef.current !== undefined) {\n      const currentEditor: any = editorRef.current;\n      currentEditor.setValue(value || \"\");\n    }\n    // eslint-disable-next-line\n  }, [isEditorReady]);\n\n  useEffect(() => {\n    if (!selectedInputOption) {\n      setSelectedInputOption(inputOptions[0]);\n    }\n    if (!selectedOutputOption) {\n      setSelectedOutputOption(outputOptions[0]);\n    }\n    if (selectedInputOption && !inputOptions.includes(selectedInputOption)) {\n      setInputOptions(outputOptions);\n      setOutputOptions(inputOptions);\n      return;\n    }\n    if (selectedOutputOption && !outputOptions.includes(selectedOutputOption)) {\n      setInputOptions(outputOptions);\n      setOutputOptions(inputOptions);\n      return;\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.Error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  function handleSwap() {\n    setInputOptions(outputOptions);\n    setOutputOptions(inputOptions);\n    setSelectedInputOption(selectedOutputOption);\n    setSelectedOutputOption(selectedInputOption);\n  }\n\n  function coerce(item: any) {\n    switch (selectedInputOption) {\n      case \"number\":\n        return parseInt(item, 10);\n      case \"date\":\n        return new Date(item);\n      default:\n        return item;\n    }\n  }\n\n  function handlePlayClick() {\n    if (valueGetter && selectedInputOption && selectedOutputOption) {\n      const v: any = valueGetter;\n      const editorValue = v.current();\n      const funcKey: any = selectedInputOption.toLowerCase() + \"To\"\n        + selectedOutputOption[0].toUpperCase() + selectedOutputOption.slice(1);\n      try {\n        const e: any = eserialize;\n        setResults(e[funcKey](coerce(editorValue)).toString());\n      } catch (e) {\n        console.error(e);\n        setError(e.message);\n      }\n    }\n  }\n\n  function handleClearButton() {\n    setResults(undefined);\n  }\n\n  function handleInputMenuItemClick(selectedInputOptionFromClick: string) {\n    setSelectedInputOption(selectedInputOptionFromClick);\n    setInputAnchorEl(null);\n  }\n\n  function handleOutputMenuItemClick(selectedOutputOptionFromClick: string) {\n    setSelectedOutputOption(selectedOutputOptionFromClick);\n    setOutputAnchorEl(null);\n  }\n\n  const handleInputClose = () => {\n    setInputAnchorEl(null);\n  };\n\n  const handleOutputClose = () => {\n    setOutputAnchorEl(null);\n  };\n\n  const handleInputClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setInputAnchorEl(event.currentTarget);\n  };\n\n  const handleOutputClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOutputAnchorEl(event.currentTarget);\n  };\n\n  const { t } = useTranslation();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    monaco.editor.setTheme(darkMode.value ? \"vs-dark\" : \"vs\");\n  }, [darkMode.value]);\n\n  const inputTitle: string = t(\"Input\");\n  const outputTitle: string = t(\"Output\");\n  const toggleDarkModeTitle: string = t(\"Toggle Dark Mode\");\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-start\" xs={10}>\n            <Typography variant=\"h6\" style={{ paddingRight: \"20px\" }}>{t(\"ΞSerialize\")}</Typography>\n            <Typography variant=\"caption\" style={{ paddingRight: \"5px\" }}>\n              {t(\"serialize and deserialize the Ethereum Stack\")}\n            </Typography>\n            <IconButton onClick={handlePlayClick} disabled={!isEditorReady}>\n              <PlayCircle />\n            </IconButton>\n            {<>\n              <Tooltip title={inputTitle}>\n                <Button onClick={handleInputClick}>{selectedInputOption}</Button>\n              </Tooltip>\n              <Menu\n                id=\"input-menu\"\n                anchorEl={inputAnchorEl}\n                keepMounted\n                open={Boolean(inputAnchorEl)}\n                onClose={handleInputClose}\n              >\n                {Object.values(inputOptions).map((inputOption, i) => (\n                  <MenuItem onClick={(event) => handleInputMenuItemClick(inputOption)}>{inputOption}</MenuItem>\n                ))}\n              </Menu>\n            </>\n            }\n            <IconButton onClick={handleSwap}>\n              <CompareArrows />\n            </IconButton>\n            {<>\n              <Tooltip title={outputTitle}>\n                <Button onClick={handleOutputClick}>{selectedOutputOption}</Button>\n              </Tooltip>\n              <Menu\n                id=\"output-menu\"\n                anchorEl={outputAnchorEl}\n                keepMounted\n                open={Boolean(outputAnchorEl)}\n                onClose={handleOutputClose}\n              >\n                {Object.values(outputOptions).map((outputOption, i) => (\n                  <MenuItem onClick={(event) => handleOutputMenuItemClick(outputOption)}>{outputOption}</MenuItem>\n                ))}\n              </Menu>\n            </>\n            }\n          </Grid>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-end\" xs={2}>\n            <LanguageMenu />\n            {hideToggleDarkMode ? null :\n              <Tooltip title={toggleDarkModeTitle}>\n                <IconButton onClick={darkMode.toggle}>\n                  {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n                </IconButton>\n              </Tooltip>\n            }\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <CssBaseline />\n      <SplitPane split=\"vertical\" minSize={100} maxSize={-100} defaultSize={\"35%\"} style={{ flexGrow: 1 }}>\n        <MonacoEditor\n          height=\"93vh\"\n\n          editorOptions={{\n            useShadows: false,\n            minimap: {\n              enabled: false,\n            },\n            scrollBeyondLastLine: false,\n            lineNumbers: \"on\",\n            automaticLayout: true,\n          }}\n          onChange={handleEditorChange}\n          value={value || \"\"}\n          language=\"markdown\"\n          editorDidMount={handleEditorDidMount}\n        />\n        <div>\n          <Button\n            style={{ position: \"absolute\", top: \"0px\", right: \"15px\", zIndex: 1 }}\n            onClick={handleClearButton}>\n            Clear\n          </Button>\n          <Typography style={{ padding: \"10px\" }}>{results}</Typography>\n        </div>\n      </SplitPane>\n      <SnackBar\n        close={() => {\n          setNotification(undefined);\n          setError(undefined);\n        }}\n        notification={notification} />\n    </MuiThemeProvider>\n  );\n};\n\nexport default MyApp;\n","import openrpcDocument from \"../openrpc.json\";\nimport * as eserialize from \"@etclabscore/eserialize\";\n\nwindow.addEventListener(\"message\", async (ev: MessageEvent) => {\n  const evSource: any = ev.source;\n  if (!ev.data.jsonrpc) {\n    return;\n  }\n  if (ev.data.method === \"rpc.discover\") {\n    evSource.postMessage({\n      jsonrpc: \"2.0\",\n      result: openrpcDocument,\n      id: ev.data.id,\n    }, ev.origin);\n    return;\n  }\n  const otherEserialize: any = eserialize;\n  if (!otherEserialize[ev.data.method]) {\n    evSource.postMessage({\n      jsonrpc: \"2.0\",\n      error: {\n        code: 32009,\n        message: \"Method not found\",\n      },\n      id: ev.data.id,\n    }, ev.origin);\n    return;\n  }\n  try {\n    const results = otherEserialize[ev.data.method](...ev.data.params);\n    evSource.postMessage({\n      jsonrpc: \"2.0\",\n      result: results,\n      id: ev.data.id,\n    }, ev.origin);\n  } catch (e) {\n    evSource.postMessage({\n      jsonrpc: \"2.0\",\n      error: {\n        code: 32329,\n        message: e.message,\n      },\n      id: ev.data.id,\n    }, ev.origin);\n  }\n});\n\nexport default {};\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MyApp from \"./containers/MyApp\";\nimport \"./index.css\";\nimport \"./PostMessageServer/postMessageServer\";\n\nReactDOM.render(<MyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}