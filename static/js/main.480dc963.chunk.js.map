{"version":3,"sources":["themes/theme.ts","i18n.ts","translations/en.ts","translations/kr.ts","translations/cn.ts","components/SnackBar/SnackBar.tsx","containers/LanguageMenu/index.tsx","containers/LanguageMenu/LanguageMenu.tsx","containers/MyApp.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","momentMap","kr","cn","en-US","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","Date","Pristine","Change Language","Toggle Dark Mode","Configuration","Back","interpolation","escapeValue","format","value","lng","ln","moment","locale","NotificationType","reverseSupportedLanguages","EN","中文","한국어","supportedLanguages","LanguageMenu","_useTranslation","useTranslation","t","_React$useState","React","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","react","Tooltip","title","Button","onClick","event","currentTarget","language","Menu","id","keepMounted","open","Boolean","onClose","values","map","lang","i","MenuItem","changeLanguage","handleMenuItemClick","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","_this$props","this","classes","className","message","variant","other","objectWithoutProperties","Icon","react_default","a","createElement","SnackbarContent","assign","classNames","aria-describedby","icon","iconVariant","action","IconButton","key","aria-label","close","Close_default","Component","SnackBarContentWrapper","withStyles","theme","green","backgroundColor","dark","primary","secondary","amber","fontSize","opacity","marginRight","spacing","display","alignItems","padding","margin","SnackBarWrapper","_this$props2","notification","isEmpty","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","SnackBar","marginLeft","eserialize","hexToDate","hexToNumber","hexToString","dateToHex","stringToHex","numberToHex","MyApp","darkMode","useDarkMode","_useState","useState","_useState2","isEditorReady","setIsEditorReady","_useState3","_useState4","inputOptions","setInputOptions","_useState5","_useState6","outputOptions","setOutputOptions","_useQueryParam","useQueryParam","StringParam","_useQueryParam2","selectedInputOption","setSelectedInputOption","_useQueryParam3","_useQueryParam4","selectedOutputOption","setSelectedOutputOption","_useQueryParam5","_useQueryParam6","setValue","inputAnchorEl","setInputAnchorEl","_React$useState3","_React$useState4","outputAnchorEl","setOutputAnchorEl","_React$useState5","_React$useState6","setError","_useState7","_useState8","results","setResults","_useState9","_useState10","setNotification","valueGetter","useRef","editorRef","useEffect","current","includes","ThemeProvider","AppBar","Toolbar","Grid","container","alignContent","justify","Typography","style","paddingRight","editorValue","funcKey","toLowerCase","toUpperCase","slice","item","parseInt","coerce","e","console","disabled","PlayCircleFilled_default","Fragment","inputOption","CompareArrows_default","outputOption","containers_LanguageMenu","toggle","Brightness3_default","WbSunny_default","CssBaseline","index_esm","split","minSize","maxSize","defaultSize","flexGrow","lib","height","onChange","ev","v","editorDidMount","vg","editor","top","right","zIndex","undefined","toString","ReactDOM","render","src_containers_MyApp","document","getElementById"],"mappings":"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","file":"static/js/main.480dc963.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport enJSON from \"./translations/en\";\nimport krJSON from \"./translations/kr\";\nimport cnJSON from \"./translations/cn\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-ca\";\nimport i18next from \"i18next\";\n\ninterface IMap {\n  [key: string]: string;\n}\n\nconst momentMap: IMap = {\n  \"kr\": \"ko\",\n  \"cn\": \"zh-cn\",\n  \"en-US\": \"en-ca\",\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: { translation: enJSON },\n      kr: { translation: krJSON },\n      cn: { translation: cnJSON },\n    },\n    interpolation: {\n      escapeValue: false,\n      format: (value, format, lng) => {\n        if (!lng) {\n          return;\n        }\n        const ln = momentMap[lng];\n        switch (format) {\n          case \"date\":\n            return moment(value).locale(ln || \"en\").format(\"MMMM Do YYYY, h:mm:ss a\") as any;\n          default:\n            break;\n        }\n      },\n    },\n  });\n\nexport const reverseSupportedLanguages: IMap = {\n  \"EN\": \"en-US\", //tslint:disable-line\n  \"中文\": \"cn\", //tslint:disable-line\n  \"한국어\": \"kr\", //tslint:disable-line\n};\n\nexport const supportedLanguages: IMap = {\n  \"en-US\": \"EN\",\n  \"cn\": \"中文\",\n  \"kr\": \"한국어\",\n};\n\nexport const changeLanguage = (l: string) => {\n  return i18next.changeLanguage(l);\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"Change Language\",\n  \"Toggle Dark Mode\": \"Toggle Dark Mode\",\n  \"Configuration\": \"Configuration\",\n  \"Back\": \"Back\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"언어 변경\",\n  \"Toggle Dark Mode\": \"블랙모드 변경\",\n  \"Configuration\": \"구성\",\n  \"Back\": \"뒤로\",\n};\n","export default {\n  // Moment integration\n  \"Date\": \"{{date, date}}\",\n  // App Bar\n  \"Pristine\": \"Pristine\",\n  \"Change Language\": \"更改语言\",\n  \"Toggle Dark Mode\": \"切换黑暗模式\",\n  \"Configuration\": \"配置\",\n  \"Back\": \"返回\",\n};\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { isEmpty } from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  close: {\n    padding: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success = \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n  onClose: any;\n  variant: NotificationType;\n  className: string;\n  message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n        open\n        autoHideDuration={3000}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}>\n        <SnackBarContentWrapper\n          onClose={close}\n          variant={notification.type}\n          message={<span>{notification.message}</span>}\n          className={classes.margin}\n        />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import LanguageMenu from \"./LanguageMenu\";\nexport default LanguageMenu;\n","import * as React from \"react\";\nimport { Menu, MenuItem, Tooltip, Button } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { supportedLanguages, reverseSupportedLanguages } from \"../../i18n\";\n\nconst LanguageMenu: React.FC = (props) => {\n  const { t, i18n } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (lang: string) => {\n    setAnchorEl(null);\n    // this forces language change for react + i18n react\n    i18n.changeLanguage(reverseSupportedLanguages[lang]);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Tooltip title={t(\"Change Language\")}>\n        <Button onClick={handleClick}>{supportedLanguages[i18n.language]}</Button>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {Object.values(supportedLanguages).map((lang, i) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(lang)}>{lang}</MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageMenu;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { MuiThemeProvider, AppBar, Toolbar, Typography, IconButton, Tooltip, CssBaseline, Grid, Button, MenuItem, Menu } from \"@material-ui/core\"; //tslint:disable-line\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport CompareArrows from \"@material-ui/icons/CompareArrows\";\nimport { lightTheme, darkTheme } from \"../themes/theme\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageMenu from \"./LanguageMenu\";\nimport SplitPane from \"react-split-pane\";\nimport { ControlledEditor } from \"@monaco-editor/react\";\nimport { hexToDate, hexToNumber, hexToString, stringToHex, dateToHex, numberToHex } from \"@etclabscore/eserialize\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"../components/SnackBar/SnackBar\";\nimport \"./MyApp.css\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\n\nimport { useQueryParam, StringParam } from \"use-query-params\";\n\nconst eserialize = {\n  hexToDate,\n  hexToNumber,\n  hexToString,\n  dateToHex,\n  stringToHex,\n  numberToHex,\n};\n\nconst MyApp: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [inputOptions, setInputOptions] = useState([\n    \"string\",\n    \"number\",\n    \"date\",\n  ]);\n  const [outputOptions, setOutputOptions] = useState([\n    \"hex\",\n  ]);\n\n  const [selectedInputOption, setSelectedInputOption] = useQueryParam(\"input\", StringParam);\n  const [selectedOutputOption, setSelectedOutputOption] = useQueryParam(\"output\", StringParam);\n  const [value, setValue] = useQueryParam(\"value\", StringParam);\n  const [inputAnchorEl, setInputAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [outputAnchorEl, setOutputAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [error, setError] = React.useState();\n  const [results, setResults] = useState();\n  const [notification, setNotification] = useState<ISnackBarNotification | undefined>();\n  const valueGetter = useRef();\n  const editorRef = useRef();\n\n  function handleEditorDidMount(vg: any, editor: any) {\n    valueGetter.current = vg;\n    editorRef.current = editor;\n    setIsEditorReady(true);\n  }\n\n  function handleEditorChange(ev: any, v: string | undefined): string | undefined {\n    setValue(v);\n    return v;\n  }\n\n  useEffect(() => {\n    if (isEditorReady) {\n      (editorRef as any).current.setValue(value || \"\");\n    }\n    // eslint-disable-next-line\n  }, [isEditorReady]);\n\n  useEffect(() => {\n    if (!selectedInputOption) {\n      setSelectedInputOption(inputOptions[0]);\n    }\n    if (!selectedOutputOption) {\n      setSelectedOutputOption(outputOptions[0]);\n    }\n    if (selectedInputOption && !inputOptions.includes(selectedInputOption)) {\n      setInputOptions(outputOptions);\n      setOutputOptions(inputOptions);\n      return;\n    }\n    if (selectedOutputOption && !outputOptions.includes(selectedOutputOption)) {\n      setInputOptions(outputOptions);\n      setOutputOptions(inputOptions);\n      return;\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setNotification({\n        type: NotificationType.error,\n        message: error,\n      });\n    }\n  }, [error]);\n\n  function handleSwap() {\n    setInputOptions(outputOptions);\n    setOutputOptions(inputOptions);\n    setSelectedInputOption(selectedOutputOption);\n    setSelectedOutputOption(selectedInputOption);\n  }\n\n  function coerce(item: any) {\n    switch (selectedInputOption) {\n      case \"number\":\n        return parseInt(item, 10);\n      case \"date\":\n        return new Date(item);\n      default:\n        return item;\n    }\n  }\n\n  function handlePlayClick() {\n    if (valueGetter && selectedInputOption && selectedOutputOption) {\n      const editorValue = (valueGetter as any).current();\n      const funcKey = selectedInputOption.toLowerCase() + \"To\"\n        + selectedOutputOption[0].toUpperCase() + selectedOutputOption.slice(1);\n      try {\n        setResults((eserialize as any)[funcKey](coerce(editorValue)));\n      } catch (e) {\n        console.error(e);\n        setError(e.message);\n      }\n    }\n  }\n\n  function handleClearButton() {\n    setResults(undefined);\n  }\n\n  function handleInputMenuItemClick(selectedInputOptionFromClick: string) {\n    setSelectedInputOption(selectedInputOptionFromClick);\n    setInputAnchorEl(null);\n  }\n\n  function handleOutputMenuItemClick(selectedOutputOptionFromClick: string) {\n    setSelectedOutputOption(selectedOutputOptionFromClick);\n    setOutputAnchorEl(null);\n  }\n\n  const handleInputClose = () => {\n    setInputAnchorEl(null);\n  };\n\n  const handleOutputClose = () => {\n    setOutputAnchorEl(null);\n  };\n\n  const handleInputClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setInputAnchorEl(event.currentTarget);\n  };\n\n  const handleOutputClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOutputAnchorEl(event.currentTarget);\n  };\n\n  const { t } = useTranslation();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"sticky\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid>\n          </Grid>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-start\">\n            <Typography variant=\"h6\" style={{ paddingRight: \"20px\" }}>{t(\"ΞSerialize\")}</Typography>\n            <Typography variant=\"caption\" style={{ paddingRight: \"5px\" }}>\n              {t(\"serialize and deserialize the Ethereum Stack\")}\n            </Typography>\n            <IconButton onClick={handlePlayClick} disabled={!isEditorReady}>\n              <PlayCircle />\n            </IconButton>\n            {<>\n              <Tooltip title={t(\"Input\")}>\n                <Button onClick={handleInputClick}>{selectedInputOption}</Button>\n              </Tooltip>\n              <Menu\n                id=\"input-menu\"\n                anchorEl={inputAnchorEl}\n                keepMounted\n                open={Boolean(inputAnchorEl)}\n                onClose={handleInputClose}\n              >\n                {Object.values(inputOptions).map((inputOption, i) => (\n                  <MenuItem onClick={(event) => handleInputMenuItemClick(inputOption)}>{inputOption}</MenuItem>\n                ))}\n              </Menu>\n            </>\n            }\n            <IconButton onClick={handleSwap}>\n              <CompareArrows />\n            </IconButton>\n            {<>\n              <Tooltip title={t(\"Output\")}>\n                <Button onClick={handleOutputClick}>{selectedOutputOption}</Button>\n              </Tooltip>\n              <Menu\n                id=\"output-menu\"\n                anchorEl={outputAnchorEl}\n                keepMounted\n                open={Boolean(outputAnchorEl)}\n                onClose={handleOutputClose}\n              >\n                {Object.values(outputOptions).map((outputOption, i) => (\n                  <MenuItem onClick={(event) => handleOutputMenuItemClick(outputOption)}>{outputOption}</MenuItem>\n                ))}\n              </Menu>\n            </>\n            }\n          </Grid>\n          <Grid container alignContent=\"center\" alignItems=\"center\" justify=\"flex-end\">\n            <LanguageMenu />\n            <Tooltip title={t(\"Toggle Dark Mode\")}>\n              <IconButton onClick={darkMode.toggle}>\n                {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n            </Tooltip>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <CssBaseline />\n      <SplitPane split=\"vertical\" minSize={100} maxSize={-100} defaultSize={\"35%\"} style={{ flexGrow: 1 }}>\n        <ControlledEditor\n          height=\"93vh\"\n          onChange={handleEditorChange}\n          theme={darkMode.value ? \"dark\" : \"light\"}\n          editorDidMount={handleEditorDidMount}\n        />\n        <div>\n          <Button\n            style={{ position: \"absolute\", top: \"0px\", right: \"15px\", zIndex: 1 }}\n            onClick={handleClearButton}>\n            Clear\n          </Button>\n          <Typography style={{ padding: \"10px\" }}>{results && results.toString()}</Typography>\n        </div>\n      </SplitPane>\n      <SnackBar\n        close={() => {\n          setNotification({} as ISnackBarNotification);\n          setError(undefined);\n        }}\n        notification={notification as ISnackBarNotification} />\n    </MuiThemeProvider>\n  );\n};\n\nexport default MyApp;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MyApp from \"./containers/MyApp\";\n\nReactDOM.render(<MyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}